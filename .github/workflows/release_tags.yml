name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  create-release:
    runs-on: ubuntu-20.04
    steps:
      - name: Set environment variables
        run: |
          echo "::set-env name=APP_NAME::${PWD##*/}" && echo $APP_NAME
          echo "::set-env name=TAG_NAME::${GITHUB_REF##*/}" && echo $TAG_NAME

      - name: Create Release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, no need to create your own
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            See [https://github.com/${{github.repository}}/blob/${{env.TAG_NAME}}/CHANGELOG.md](https://github.com/${{github.repository}}/blob/${{env.TAG_NAME}}/CHANGELOG.md) for more information on what has changed.
          draft: false
          prerelease: false

  compile-and-add-assets:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        os:
          - windows
          - linux
          - darwin
        architecture:
          - amd64
    steps:
      - name: Set environment variables
        run: |
          echo "::set-env name=APP_NAME::${PWD##*/}" && echo $APP_NAME
          echo "::set-env name=TAG_NAME::${GITHUB_REF##*/}" && echo $TAG_NAME
          if [[ "$os" == windows ]]; then
            echo "::set-env name=FILE_EXTENSION::.exe" && echo $FILE_EXTENSION
          else
            echo "::set-env name=FILE_EXTENSION::" && echo $FILE_EXTENSION
          fi

      - name: Checkout
        uses: actions/checkout@v2.3.2
        with:
          ref: main

      - name: Compile binary by defined matrix
        shell: bash
        run: |
          echo "os: ${{ matrix.os }}"
          echo "architecture: ${{ matrix.architecture }}"
          env GOOS=${{ matrix.os }} GOARCH=${{ matrix.architecture }} go build -o ./${APP_NAME}_${{ matrix.os }}_${{ matrix.architecture }}${FILE_EXTENSION} main.go
          sha256sum ./${APP_NAME}_${{ matrix.os }}_${{ matrix.architecture }}${FILE_EXTENSION} | cut -d " " -f 1 > ./${APP_NAME}_${{ matrix.os }}_${{ matrix.architecture }}${FILE_EXTENSION}.sha256

      - name: Upload release assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          hub release edit \
          -a ./${APP_NAME}_${{ matrix.os }}_${{ matrix.architecture }}${FILE_EXTENSION} -a ./${APP_NAME}_${{ matrix.os }}_${{ matrix.architecture }}${FILE_EXTENSION}.sha256 \
          -m "" "$TAG_NAME"
